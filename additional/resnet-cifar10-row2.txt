args: {'dataset': 'CIFAR10', 'model_name': 'resnet18', 'model_weight': 'IMAGENET1K_V1', 'freeze_layers': 60, 'seed': 123, 'epochs': 30, 'use_gpu': True, 'train_valid_split': 0.1, 'filepath': '.pt', 'create_plot': True, 'batch_size': 64, 'lr': 0.01, 'early_stop': True, 'early_stop_patience': 3, 'loss_delta': 0.0001}
Loading data...Files already downloaded and verified
train_size: 45000 valid_size: 5000
 0 conv1.weight                 requires_grad = False  torch.Size([64, 3, 7, 7])
 1 bn1.weight                   requires_grad = False  torch.Size([64])
 2 bn1.bias                     requires_grad = False  torch.Size([64])
 3 layer1.0.conv1.weight        requires_grad = False  torch.Size([64, 64, 3, 3])
 4 layer1.0.bn1.weight          requires_grad = False  torch.Size([64])
 5 layer1.0.bn1.bias            requires_grad = False  torch.Size([64])
 6 layer1.0.conv2.weight        requires_grad = False  torch.Size([64, 64, 3, 3])
 7 layer1.0.bn2.weight          requires_grad = False  torch.Size([64])
 8 layer1.0.bn2.bias            requires_grad = False  torch.Size([64])
 9 layer1.1.conv1.weight        requires_grad = False  torch.Size([64, 64, 3, 3])
10 layer1.1.bn1.weight          requires_grad = False  torch.Size([64])
11 layer1.1.bn1.bias            requires_grad = False  torch.Size([64])
12 layer1.1.conv2.weight        requires_grad = False  torch.Size([64, 64, 3, 3])
13 layer1.1.bn2.weight          requires_grad = False  torch.Size([64])
14 layer1.1.bn2.bias            requires_grad = False  torch.Size([64])
15 layer2.0.conv1.weight        requires_grad = False  torch.Size([128, 64, 3, 3])
16 layer2.0.bn1.weight          requires_grad = False  torch.Size([128])
17 layer2.0.bn1.bias            requires_grad = False  torch.Size([128])
18 layer2.0.conv2.weight        requires_grad = False  torch.Size([128, 128, 3, 3])
19 layer2.0.bn2.weight          requires_grad = False  torch.Size([128])
20 layer2.0.bn2.bias            requires_grad = False  torch.Size([128])
21 layer2.0.downsample.0.weight requires_grad = False  torch.Size([128, 64, 1, 1])
22 layer2.0.downsample.1.weight requires_grad = False  torch.Size([128])
23 layer2.0.downsample.1.bias   requires_grad = False  torch.Size([128])
24 layer2.1.conv1.weight        requires_grad = False  torch.Size([128, 128, 3, 3])
25 layer2.1.bn1.weight          requires_grad = False  torch.Size([128])
26 layer2.1.bn1.bias            requires_grad = False  torch.Size([128])
27 layer2.1.conv2.weight        requires_grad = False  torch.Size([128, 128, 3, 3])
28 layer2.1.bn2.weight          requires_grad = False  torch.Size([128])
29 layer2.1.bn2.bias            requires_grad = False  torch.Size([128])
30 layer3.0.conv1.weight        requires_grad = False  torch.Size([256, 128, 3, 3])
31 layer3.0.bn1.weight          requires_grad = False  torch.Size([256])
32 layer3.0.bn1.bias            requires_grad = False  torch.Size([256])
33 layer3.0.conv2.weight        requires_grad = False  torch.Size([256, 256, 3, 3])
34 layer3.0.bn2.weight          requires_grad = False  torch.Size([256])
35 layer3.0.bn2.bias            requires_grad = False  torch.Size([256])
36 layer3.0.downsample.0.weight requires_grad = False  torch.Size([256, 128, 1, 1])
37 layer3.0.downsample.1.weight requires_grad = False  torch.Size([256])
38 layer3.0.downsample.1.bias   requires_grad = False  torch.Size([256])
39 layer3.1.conv1.weight        requires_grad = False  torch.Size([256, 256, 3, 3])
40 layer3.1.bn1.weight          requires_grad = False  torch.Size([256])
41 layer3.1.bn1.bias            requires_grad = False  torch.Size([256])
42 layer3.1.conv2.weight        requires_grad = False  torch.Size([256, 256, 3, 3])
43 layer3.1.bn2.weight          requires_grad = False  torch.Size([256])
44 layer3.1.bn2.bias            requires_grad = False  torch.Size([256])
45 layer4.0.conv1.weight        requires_grad = False  torch.Size([512, 256, 3, 3])
46 layer4.0.bn1.weight          requires_grad = False  torch.Size([512])
47 layer4.0.bn1.bias            requires_grad = False  torch.Size([512])
48 layer4.0.conv2.weight        requires_grad = False  torch.Size([512, 512, 3, 3])
49 layer4.0.bn2.weight          requires_grad = False  torch.Size([512])
50 layer4.0.bn2.bias            requires_grad = False  torch.Size([512])
51 layer4.0.downsample.0.weight requires_grad = False  torch.Size([512, 256, 1, 1])
52 layer4.0.downsample.1.weight requires_grad = False  torch.Size([512])
53 layer4.0.downsample.1.bias   requires_grad = False  torch.Size([512])
54 layer4.1.conv1.weight        requires_grad = False  torch.Size([512, 512, 3, 3])
55 layer4.1.bn1.weight          requires_grad = False  torch.Size([512])
56 layer4.1.bn1.bias            requires_grad = False  torch.Size([512])
57 layer4.1.conv2.weight        requires_grad = False  torch.Size([512, 512, 3, 3])
58 layer4.1.bn2.weight          requires_grad = False  torch.Size([512])
59 layer4.1.bn2.bias            requires_grad = False  torch.Size([512])
60 fc.weight                    requires_grad = True  torch.Size([10, 512])
61 fc.bias                      requires_grad = True  torch.Size([10])

epoch: 01/30 | batch 000/703 | loss: 2.6352
epoch: 01/30 | batch 100/703 | loss: 2.2603
epoch: 01/30 | batch 200/703 | loss: 1.9566
epoch: 01/30 | batch 300/703 | loss: 2.0958
epoch: 01/30 | batch 400/703 | loss: 2.1266
epoch: 01/30 | batch 500/703 | loss: 1.8742
epoch: 01/30 | batch 600/703 | loss: 1.7548
epoch: 01/30 | batch 700/703 | loss: 2.2066
epoch: 01/30 train acc: 0.3508 valid acc: 0.3368
Saving loss...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001-loss.pt
Time elapsed: 0.32 min
epoch: 02/30 | batch 000/703 | loss: 2.1299
epoch: 02/30 | batch 100/703 | loss: 2.2926
epoch: 02/30 | batch 200/703 | loss: 2.1420
epoch: 02/30 | batch 300/703 | loss: 2.4052
epoch: 02/30 | batch 400/703 | loss: 2.0646
epoch: 02/30 | batch 500/703 | loss: 2.9109
epoch: 02/30 | batch 600/703 | loss: 2.3524
epoch: 02/30 | batch 700/703 | loss: 2.1163
epoch: 02/30 train acc: 0.3522 valid acc: 0.3488
Saving loss...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001-loss.pt
Time elapsed: 0.65 min
epoch: 03/30 | batch 000/703 | loss: 2.4872
epoch: 03/30 | batch 100/703 | loss: 2.5825
epoch: 03/30 | batch 200/703 | loss: 2.3201
epoch: 03/30 | batch 300/703 | loss: 2.1265
epoch: 03/30 | batch 400/703 | loss: 1.8982
epoch: 03/30 | batch 500/703 | loss: 2.1127
epoch: 03/30 | batch 600/703 | loss: 2.0279
epoch: 03/30 | batch 700/703 | loss: 2.9290
epoch: 03/30 train acc: 0.3499 valid acc: 0.3260
Saving loss...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001-loss.pt
Time elapsed: 0.95 min
epoch: 04/30 | batch 000/703 | loss: 2.3063
epoch: 04/30 | batch 100/703 | loss: 2.8152
epoch: 04/30 | batch 200/703 | loss: 2.9057
epoch: 04/30 | batch 300/703 | loss: 2.2742
epoch: 04/30 | batch 400/703 | loss: 2.1362
epoch: 04/30 | batch 500/703 | loss: 2.2072
epoch: 04/30 | batch 600/703 | loss: 2.8085
epoch: 04/30 | batch 700/703 | loss: 2.3050
epoch: 04/30 train acc: 0.3628 valid acc: 0.3480
Saving loss...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001-loss.pt
Time elapsed: 1.26 min
epoch: 05/30 | batch 000/703 | loss: 1.8533
epoch: 05/30 | batch 100/703 | loss: 2.2336
epoch: 05/30 | batch 200/703 | loss: 2.1294
epoch: 05/30 | batch 300/703 | loss: 2.6322
epoch: 05/30 | batch 400/703 | loss: 2.5273
epoch: 05/30 | batch 500/703 | loss: 2.1495
epoch: 05/30 | batch 600/703 | loss: 2.2145
epoch: 05/30 | batch 700/703 | loss: 2.2315
epoch: 05/30 train acc: 0.3529 valid acc: 0.3436
Saving loss...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001-loss.pt
Saving model...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001.pt
Saving loss...to CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001-loss.pt
Total training #epoch: 4
Total training time: 1.60 min
Loading data...Files already downloaded and verified
test_size: 10000
Loading model...from CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001.pt
test acc: 0.3588
Loading loss...from CIFAR10-resnet18-freeze60-batch64-epoch30-lr0.01-earlystop3-0.0001.pt
